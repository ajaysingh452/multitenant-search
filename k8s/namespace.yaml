apiVersion: v1
kind: Namespace
metadata:
  name: search-system
  labels:
    name: search-system
    purpose: multi-tenant-search

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-ssd
provisioner: kubernetes.io/aws-ebs  # Change based on cloud provider
parameters:
  type: gp3
  iops: "3000"
  throughput: "125"
  fsType: ext4
allowVolumeExpansion: true
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: LimitRange
metadata:
  name: search-system-limits
  namespace: search-system
spec:
  limits:
  - default:
      cpu: "1000m"
      memory: "1Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "4000m"
      memory: "8Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: search-system-quota
  namespace: search-system
spec:
  hard:
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "40"
    limits.memory: 80Gi
    persistentvolumeclaims: "10"
    requests.storage: 1Ti
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"

---
# RBAC for monitoring and operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: search-system
  name: search-operator
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: search-operator-binding
  namespace: search-system
subjects:
- kind: ServiceAccount
  name: search-router
  namespace: search-system
roleRef:
  kind: Role
  name: search-operator
  apiGroup: rbac.authorization.k8s.io

---
# Priority Classes for workload scheduling
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: search-critical
value: 1000
globalDefault: false
description: "Critical search infrastructure components"

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: search-important
value: 500
globalDefault: false
description: "Important search components"

---
# Node labels for workload placement
# Apply these labels to your nodes:
# kubectl label nodes <node-names> node-type=compute
# kubectl label nodes <node-names> workload=search-engine

---
# Network policies are defined in individual component files
# This file contains shared infrastructure resources